# -*- coding: utf-8 -*-

"""Main module."""
from pyevr import apis
from pyevr.openapi_client.api_client import ApiClient
from pyevr.openapi_client.configuration import Configuration


class ExtendedApiClient(ApiClient):
    """Extended API client generated by openapi-generator-cli."""

    @classmethod
    def deserialize_data(cls, response_data, response_type):
        """Deserializes parsed json into an object.

        :param response_data: parsed json to be deserialized.
        :param response_type: class literal for
            deserialized object, or string of class name.

        :return: deserialized object.
        """
        return response_type.from_dict(response_data)


class EVRClient(object):
    """API client class for EVR.

    :param api_key: Company API key in EVR
    :param host: EVR host. Defaults to test host (optional)
    """

    openapi_client_class = ExtendedApiClient

    def __init__(self, api_key: str, host: str = None):
        configuration = Configuration(api_key={"SecretApiKey": api_key})
        if host is not None:
            configuration.host = host
        self.openapi_client = self.openapi_client_class(configuration)

        self.assortments = apis.AssortmentsAPI(self.openapi_client)
        self.certificates = apis.CertificatesAPI(self.openapi_client)
        self.measurements = apis.MeasurementsAPI(self.openapi_client)
        self.measurement_units = apis.MeasurementUnitsAPI(self.openapi_client)
        self.organizations = apis.OrganizationsAPI(self.openapi_client)
        self.place_of_deliveries = apis.PlaceOfDeliveriesAPI(self.openapi_client)
        self.waybills = apis.WaybillsAPI(self.openapi_client)

    @classmethod
    def deserialize_data(cls, response_data, response_type):
        return cls.openapi_client_class.deserialize_data(response_data, response_type)
