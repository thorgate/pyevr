# coding: utf-8

"""
    EVR API

    OpenAPI Generator'i jaoks kohandatud EVR API kirjeldus. Kasuta seda juhul, kui spetsifikatsioonile vastava EVR API kirjeldusega ei Ãµnnestu klienti genereerida.

    The version of the OpenAPI document: 1.14.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field, constr
from pyevr.openapi_client.models.transporter import Transporter


class Transport(BaseModel):
    """
    Transport
    """

    transporter: Transporter = Field(...)
    driver_name: constr(strict=True, max_length=200, min_length=0) = Field(
        ..., alias="driverName", description="Autojuhi nimi"
    )
    driver_id_code: constr(strict=True, max_length=11, min_length=0) = Field(
        ..., alias="driverIdCode", description="Autojuhi isikukood"
    )
    driver_phone: Optional[constr(strict=True, max_length=25)] = Field(
        None, alias="driverPhone", description="Autojuhi telefoninumber"
    )
    van_registration_number: constr(strict=True, max_length=10, min_length=0) = Field(
        ...,
        alias="vanRegistrationNumber",
        description="Veoki riiklik registreerimisnumber",
    )
    trailer_registration_number: Optional[constr(strict=True, max_length=10)] = Field(
        None,
        alias="trailerRegistrationNumber",
        description="Haagise kasutamise korral haagise riiklik registreerimisnumber",
    )
    __properties = [
        "transporter",
        "driverName",
        "driverIdCode",
        "driverPhone",
        "vanRegistrationNumber",
        "trailerRegistrationNumber",
    ]

    class Config:
        """Pydantic configuration"""

        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Transport:
        """Create an instance of Transport from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True, exclude={}, exclude_none=True)
        # override the default output from pydantic by calling `to_dict()` of transporter
        if self.transporter:
            _dict["transporter"] = self.transporter.to_dict()
        # set to None if driver_phone (nullable) is None
        # and __fields_set__ contains the field
        if self.driver_phone is None and "driver_phone" in self.__fields_set__:
            _dict["driverPhone"] = None

        # set to None if trailer_registration_number (nullable) is None
        # and __fields_set__ contains the field
        if (
            self.trailer_registration_number is None
            and "trailer_registration_number" in self.__fields_set__
        ):
            _dict["trailerRegistrationNumber"] = None

        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> Transport:
        """Create an instance of Transport from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return Transport.parse_obj(obj)

        _obj = Transport.parse_obj(
            {
                "transporter": Transporter.from_dict(obj.get("transporter"))
                if obj.get("transporter") is not None
                else None,
                "driver_name": obj.get("driverName"),
                "driver_id_code": obj.get("driverIdCode"),
                "driver_phone": obj.get("driverPhone"),
                "van_registration_number": obj.get("vanRegistrationNumber"),
                "trailer_registration_number": obj.get("trailerRegistrationNumber"),
            }
        )
        return _obj
