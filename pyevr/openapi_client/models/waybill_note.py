# coding: utf-8

"""
    EVR API

    OpenAPI Generator'i jaoks kohandatud EVR API kirjeldus. Kasuta seda juhul, kui spetsifikatsioonile vastava EVR API kirjeldusega ei õnnestu klienti genereerida.

    The version of the OpenAPI document: 1.14.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import datetime
from typing import Optional
from pydantic import BaseModel, Field, StrictStr
from pyevr.openapi_client.models.waybill_note_creator import WaybillNoteCreator


class WaybillNote(BaseModel):
    """
    WaybillNote
    """

    creator: Optional[WaybillNoteCreator] = None
    creation_time: Optional[datetime] = Field(
        None, alias="creationTime", description="Loomise aeg"
    )
    message: Optional[StrictStr] = Field(None, description="Sõnum")
    __properties = ["creator", "creationTime", "message"]

    class Config:
        """Pydantic configuration"""

        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> WaybillNote:
        """Create an instance of WaybillNote from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True, exclude={}, exclude_none=True)
        # override the default output from pydantic by calling `to_dict()` of creator
        if self.creator:
            _dict["creator"] = self.creator.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> WaybillNote:
        """Create an instance of WaybillNote from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return WaybillNote.parse_obj(obj)

        _obj = WaybillNote.parse_obj(
            {
                "creator": WaybillNoteCreator.from_dict(obj.get("creator"))
                if obj.get("creator") is not None
                else None,
                "creation_time": obj.get("creationTime"),
                "message": obj.get("message"),
            }
        )
        return _obj
